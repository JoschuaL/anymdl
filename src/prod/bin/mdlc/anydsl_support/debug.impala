fn breakpoint_() -> bool{
{}
}
fn assert__bool_string_string_string_int(condition : bool,reason : string,funcname : string,filename : string,line : int,) -> bool{
{}
}
fn assert__bool_string_string_string(condition : bool,reason : string,funcname : string,filename : string,) -> bool{
let line = 0;
{}
}
fn assert__bool_string_string(condition : bool,reason : string,funcname : string,) -> bool{
let filename = "";
let line = "";
{}
}
fn assert__bool_string(condition : bool,reason : string,) -> bool{
let funcname = "";
let filename = "";
let line = "";
{}
}
fn print__bool(v : bool,) -> bool{
{}
}
fn print__bool2(v : bool2,) -> bool{
{}
}
fn print__bool3(v : bool3,) -> bool{
{}
}
fn print__bool4(v : bool4,) -> bool{
{}
}
fn print__int(v : int,) -> bool{
{}
}
fn print__int2(v : int2,) -> bool{
{}
}
fn print__int3(v : int3,) -> bool{
{}
}
fn print__int4(v : int4,) -> bool{
{}
}
fn print__float(v : float,) -> bool{
{}
}
fn print__float2(v : float2,) -> bool{
{}
}
fn print__float3(v : float3,) -> bool{
{}
}
fn print__float4(v : float4,) -> bool{
{}
}
fn print__double(v : double,) -> bool{
{}
}
fn print__double2(v : double2,) -> bool{
{}
}
fn print__double3(v : double3,) -> bool{
{}
}
fn print__double4(v : double4,) -> bool{
{}
}
fn print__color(v : color,) -> bool{
{}
}
fn print__string(v : string,) -> bool{
{}
}
