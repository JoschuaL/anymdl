/*fn @div_assign__int_int(x : int, y : int) -> int;
fn @div_assign__int2_int2(x : int2, y : int2) -> int2;
fn @div_assign__int2_int(x : int2, y : int) -> int2;
fn @div_assign__int3_int3(x : int3, y : int3) -> int3;
fn @div_assign__int3_int(x : int3, y : int) -> int3;
fn @div_assign__int4_int4(x : int4, y : int4) -> int4;
fn @div_assign__int4_int(x : int4, y : int) -> int4;
fn @div_assign__float_float(x : float, y : float) -> float;
fn @div_assign__float2_float2(x : float2, y : float2) -> float2;
fn @div_assign__float2_float(x : float2, y : float) -> float2;
fn @div_assign__float3_float3(x : float3, y : float3) -> float3;
*/
fn @div_assign__float3_float(x : &mut float3, y : float) -> float3{
    x(0) /= y;
    x(1) /= y;
    x(2) /= y;
    *x
}
/*
fn @div_assign__float4_float4(x : float4, y : float4) -> float4;
fn @div_assign__float4_float(x : float4, y : float) -> float4;
fn @div_assign__double_double(x : double, y : double) -> double;
fn @div_assign__double2_double2(x : double2, y : double2) -> double2;
fn @div_assign__double2_double(x : double2, y : double) -> double2;
fn @div_assign__double3_double3(x : double3, y : double3) -> double3;
fn @div_assign__double3_double(x : double3, y : double) -> double3;
fn @div_assign__double4_double4(x : double4, y : double4) -> double4;
fn @div_assign__double4_double(x : double4, y : double) -> double4;
fn @div_assign__color_color(x : color, y : color) -> color;
fn @div_assign__color_float(x : color, y : float) -> color;
fn @div_assign__float2x2_float(x : float2x2, y : float) -> float2x2;
fn @div_assign__float3x2_float(x : float3x2, y : float) -> float3x2;
fn @div_assign__float4x2_float(x : float4x2, y : float) -> float4x2;
fn @div_assign__float2x3_float(x : float2x3, y : float) -> float2x3;
fn @div_assign__float3x3_float(x : float3x3, y : float) -> float3x3;
fn @div_assign__float4x3_float(x : float4x3, y : float) -> float4x3;
fn @div_assign__float2x4_float(x : float2x4, y : float) -> float2x4;
fn @div_assign__float3x4_float(x : float3x4, y : float) -> float3x4;
fn @div_assign__float4x4_float(x : float4x4, y : float) -> float4x4;
fn @div_assign__double2x2_double(x : double2x2, y : double) -> double2x2;
fn @div_assign__double3x2_double(x : double3x2, y : double) -> double3x2;
fn @div_assign__double4x2_double(x : double4x2, y : double) -> double4x2;
fn @div_assign__double2x3_double(x : double2x3, y : double) -> double2x3;
fn @div_assign__double3x3_double(x : double3x3, y : double) -> double3x3;
fn @div_assign__double4x3_double(x : double4x3, y : double) -> double4x3;
fn @div_assign__double2x4_double(x : double2x4, y : double) -> double2x4;
fn @div_assign__double3x4_double(x : double3x4, y : double) -> double3x4;
fn @div_assign__double4x4_double(x : double4x4, y : double) -> double4x4;
fn @sub_assign__int_int(x : int, y : int) -> int;
fn @sub_assign__int2_int2(x : int2, y : int2) -> int2;
fn @sub_assign__int2_int(x : int2, y : int) -> int2;
fn @sub_assign__int3_int3(x : int3, y : int3) -> int3;
fn @sub_assign__int3_int(x : int3, y : int) -> int3;
fn @sub_assign__int4_int4(x : int4, y : int4) -> int4;
fn @sub_assign__int4_int(x : int4, y : int) -> int4;
fn @sub_assign__float_float(x : float, y : float) -> float;
fn @sub_assign__float2_float2(x : float2, y : float2) -> float2;
fn @sub_assign__float2_float(x : float2, y : float) -> float2;
fn @sub_assign__float3_float3(x : float3, y : float3) -> float3;
fn @sub_assign__float3_float(x : float3, y : float) -> float3;
fn @sub_assign__float4_float4(x : float4, y : float4) -> float4;
fn @sub_assign__float4_float(x : float4, y : float) -> float4;
fn @sub_assign__double_double(x : double, y : double) -> double;
fn @sub_assign__double2_double2(x : double2, y : double2) -> double2;
fn @sub_assign__double2_double(x : double2, y : double) -> double2;
fn @sub_assign__double3_double3(x : double3, y : double3) -> double3;
fn @sub_assign__double3_double(x : double3, y : double) -> double3;
fn @sub_assign__double4_double4(x : double4, y : double4) -> double4;
fn @sub_assign__double4_double(x : double4, y : double) -> double4;
fn @sub_assign__color_color(x : color, y : color) -> color;
fn @sub_assign__color_float(x : color, y : float) -> color;
fn @sub_assign__float2x2_float2x2(x : float2x2, y : float2x2) -> float2x2;
fn @sub_assign__float3x2_float3x2(x : float3x2, y : float3x2) -> float3x2;
fn @sub_assign__float4x2_float4x2(x : float4x2, y : float4x2) -> float4x2;
fn @sub_assign__float2x3_float2x3(x : float2x3, y : float2x3) -> float2x3;
fn @sub_assign__float3x3_float3x3(x : float3x3, y : float3x3) -> float3x3;
fn @sub_assign__float4x3_float4x3(x : float4x3, y : float4x3) -> float4x3;
fn @sub_assign__float2x4_float2x4(x : float2x4, y : float2x4) -> float2x4;
fn @sub_assign__float3x4_float3x4(x : float3x4, y : float3x4) -> float3x4;
fn @sub_assign__float4x4_float4x4(x : float4x4, y : float4x4) -> float4x4;
fn @sub_assign__double2x2_double2x2(x : double2x2, y : double2x2) -> double2x2;
fn @sub_assign__double3x2_double3x2(x : double3x2, y : double3x2) -> double3x2;
fn @sub_assign__double4x2_double4x2(x : double4x2, y : double4x2) -> double4x2;
fn @sub_assign__double2x3_double2x3(x : double2x3, y : double2x3) -> double2x3;
fn @sub_assign__double3x3_double3x3(x : double3x3, y : double3x3) -> double3x3;
fn @sub_assign__double4x3_double4x3(x : double4x3, y : double4x3) -> double4x3;
fn @sub_assign__double2x4_double2x4(x : double2x4, y : double2x4) -> double2x4;
fn @sub_assign__double3x4_double3x4(x : double3x4, y : double3x4) -> double3x4;
fn @sub_assign__double4x4_double4x4(x : double4x4, y : double4x4) -> double4x4;
fn @add_assign__int_int(x : int, y : int) -> int;
fn @add_assign__int2_int2(x : int2, y : int2) -> int2;
fn @add_assign__int2_int(x : int2, y : int) -> int2;
fn @add_assign__int3_int3(x : int3, y : int3) -> int3;
fn @add_assign__int3_int(x : int3, y : int) -> int3;
fn @add_assign__int4_int4(x : int4, y : int4) -> int4;
fn @add_assign__int4_int(x : int4, y : int) -> int4;
fn @add_assign__float_float(x : float, y : float) -> float;
fn @add_assign__float2_float2(x : float2, y : float2) -> float2;
fn @add_assign__float2_float(x : float2, y : float) -> float2;
fn @add_assign__float3_float3(x : float3, y : float3) -> float3;
fn @add_assign__float3_float(x : float3, y : float) -> float3;
fn @add_assign__float4_float4(x : float4, y : float4) -> float4;
fn @add_assign__float4_float(x : float4, y : float) -> float4;
fn @add_assign__double_double(x : double, y : double) -> double;
fn @add_assign__double2_double2(x : double2, y : double2) -> double2;
fn @add_assign__double2_double(x : double2, y : double) -> double2;
fn @add_assign__double3_double3(x : double3, y : double3) -> double3;
fn @add_assign__double3_double(x : double3, y : double) -> double3;
fn @add_assign__double4_double4(x : double4, y : double4) -> double4;
fn @add_assign__double4_double(x : double4, y : double) -> double4;
fn @add_assign__color_color(x : color, y : color) -> color;
fn @add_assign__color_float(x : color, y : float) -> color;
fn @add_assign__float2x2_float2x2(x : float2x2, y : float2x2) -> float2x2;
fn @add_assign__float3x2_float3x2(x : float3x2, y : float3x2) -> float3x2;
fn @add_assign__float4x2_float4x2(x : float4x2, y : float4x2) -> float4x2;
fn @add_assign__float2x3_float2x3(x : float2x3, y : float2x3) -> float2x3;
fn @add_assign__float3x3_float3x3(x : float3x3, y : float3x3) -> float3x3;
fn @add_assign__float4x3_float4x3(x : float4x3, y : float4x3) -> float4x3;
fn @add_assign__float2x4_float2x4(x : float2x4, y : float2x4) -> float2x4;
fn @add_assign__float3x4_float3x4(x : float3x4, y : float3x4) -> float3x4;
fn @add_assign__float4x4_float4x4(x : float4x4, y : float4x4) -> float4x4;
fn @add_assign__double2x2_double2x2(x : double2x2, y : double2x2) -> double2x2;
fn @add_assign__double3x2_double3x2(x : double3x2, y : double3x2) -> double3x2;
fn @add_assign__double4x2_double4x2(x : double4x2, y : double4x2) -> double4x2;
fn @add_assign__double2x3_double2x3(x : double2x3, y : double2x3) -> double2x3;
fn @add_assign__double3x3_double3x3(x : double3x3, y : double3x3) -> double3x3;
fn @add_assign__double4x3_double4x3(x : double4x3, y : double4x3) -> double4x3;
fn @add_assign__double2x4_double2x4(x : double2x4, y : double2x4) -> double2x4;
fn @add_assign__double3x4_double3x4(x : double3x4, y : double3x4) -> double3x4;
fn @add_assign__double4x4_double4x4(x : double4x4, y : double4x4) -> double4x4;
fn @div__int_int(x : int, y : int) -> int;
fn @div__int2_int2(x : int2, y : int2) -> int2;
fn @div__int_int2(x : int, y : int2) -> int2;
fn @div__int2_int(x : int2, y : int) -> int2;
fn @div__int3_int3(x : int3, y : int3) -> int3;
fn @div__int_int3(x : int, y : int3) -> int3;
fn @div__int3_int(x : int3, y : int) -> int3;
fn @div__int4_int4(x : int4, y : int4) -> int4;
fn @div__int_int4(x : int, y : int4) -> int4;
fn @div__int4_int(x : int4, y : int) -> int4;
fn @div__float_float(x : float, y : float) -> float;
fn @div__float2_float2(x : float2, y : float2) -> float2;
fn @div__float_float2(x : float, y : float2) -> float2;
fn @div__float2_float(x : float2, y : float) -> float2;
fn @div__float3_float3(x : float3, y : float3) -> float3;
fn @div__float_float3(x : float, y : float3) -> float3;
fn @div__float3_float(x : float3, y : float) -> float3;
fn @div__float4_float4(x : float4, y : float4) -> float4;
fn @div__float_float4(x : float, y : float4) -> float4;
fn @div__float4_float(x : float4, y : float) -> float4;
fn @div__double_double(x : double, y : double) -> double;
fn @div__double2_double2(x : double2, y : double2) -> double2;
fn @div__double_double2(x : double, y : double2) -> double2;
fn @div__double2_double(x : double2, y : double) -> double2;
fn @div__double3_double3(x : double3, y : double3) -> double3;
fn @div__double_double3(x : double, y : double3) -> double3;
fn @div__double3_double(x : double3, y : double) -> double3;
fn @div__double4_double4(x : double4, y : double4) -> double4;
fn @div__double_double4(x : double, y : double4) -> double4;
fn @div__double4_double(x : double4, y : double) -> double4;
fn @div__color_color(x : color, y : color) -> color;
fn @div__color_float(x : color, y : float) -> color;
fn @div__float2x2_float(x : float2x2, y : float) -> float2x2;
fn @div__float3x2_float(x : float3x2, y : float) -> float3x2;
fn @div__float4x2_float(x : float4x2, y : float) -> float4x2;
fn @div__float2x3_float(x : float2x3, y : float) -> float2x3;
fn @div__float3x3_float(x : float3x3, y : float) -> float3x3;
fn @div__float4x3_float(x : float4x3, y : float) -> float4x3;
fn @div__float2x4_float(x : float2x4, y : float) -> float2x4;
fn @div__float3x4_float(x : float3x4, y : float) -> float3x4;
fn @div__float4x4_float(x : float4x4, y : float) -> float4x4;
fn @div__double2x2_double(x : double2x2, y : double) -> double2x2;
fn @div__double3x2_double(x : double3x2, y : double) -> double3x2;
fn @div__double4x2_double(x : double4x2, y : double) -> double4x2;
fn @div__double2x3_double(x : double2x3, y : double) -> double2x3;
fn @div__double3x3_double(x : double3x3, y : double) -> double3x3;
fn @div__double4x3_double(x : double4x3, y : double) -> double4x3;
fn @div__double2x4_double(x : double2x4, y : double) -> double2x4;
fn @div__double3x4_double(x : double3x4, y : double) -> double3x4;
fn @div__double4x4_double(x : double4x4, y : double) -> double4x4;
fn @neg__int(x : int) -> int;
fn @neg__int2(x : int2) -> int2;
fn @neg__int3(x : int3) -> int3;
fn @neg__int4(x : int4) -> int4;
fn @neg__float(x : float) -> float;
fn @neg__float2(x : float2) -> float2;
fn @neg__float3(x : float3) -> float3;
fn @neg__float4(x : float4) -> float4;
fn @neg__double(x : double) -> double;
fn @neg__double2(x : double2) -> double2;
fn @neg__double3(x : double3) -> double3;
fn @neg__double4(x : double4) -> double4;
fn @neg__color(x : color) -> color;
fn @neg__float2x2(x : float2x2) -> float2x2;
fn @neg__float3x2(x : float3x2) -> float3x2;
fn @neg__float4x2(x : float4x2) -> float4x2;
fn @neg__float2x3(x : float2x3) -> float2x3;
fn @neg__float3x3(x : float3x3) -> float3x3;
fn @neg__float4x3(x : float4x3) -> float4x3;
fn @neg__float2x4(x : float2x4) -> float2x4;
fn @neg__float3x4(x : float3x4) -> float3x4;
fn @neg__float4x4(x : float4x4) -> float4x4;
fn @neg__double2x2(x : double2x2) -> double2x2;
fn @neg__double3x2(x : double3x2) -> double3x2;
fn @neg__double4x2(x : double4x2) -> double4x2;
fn @neg__double2x3(x : double2x3) -> double2x3;
fn @neg__double3x3(x : double3x3) -> double3x3;
fn @neg__double4x3(x : double4x3) -> double4x3;
fn @neg__double2x4(x : double2x4) -> double2x4;
fn @neg__double3x4(x : double3x4) -> double3x4;
fn @neg__double4x4(x : double4x4) -> double4x4;
fn @pos__int(x : int) -> int;
fn @pos__int2(x : int2) -> int2;
fn @pos__int3(x : int3) -> int3;
fn @pos__int4(x : int4) -> int4;
fn @pos__float(x : float) -> float;
fn @pos__float2(x : float2) -> float2;
fn @pos__float3(x : float3) -> float3;
fn @pos__float4(x : float4) -> float4;
fn @pos__double(x : double) -> double;
fn @pos__double2(x : double2) -> double2;
fn @pos__double3(x : double3) -> double3;
fn @pos__double4(x : double4) -> double4;
fn @pos__color(x : color) -> color;
fn @pos__float2x2(x : float2x2) -> float2x2;
fn @pos__float3x2(x : float3x2) -> float3x2;
fn @pos__float4x2(x : float4x2) -> float4x2;
fn @pos__float2x3(x : float2x3) -> float2x3;
fn @pos__float3x3(x : float3x3) -> float3x3;
fn @pos__float4x3(x : float4x3) -> float4x3;
fn @pos__float2x4(x : float2x4) -> float2x4;
fn @pos__float3x4(x : float3x4) -> float3x4;
fn @pos__float4x4(x : float4x4) -> float4x4;
fn @pos__double2x2(x : double2x2) -> double2x2;
fn @pos__double3x2(x : double3x2) -> double3x2;
fn @pos__double4x2(x : double4x2) -> double4x2;
fn @pos__double2x3(x : double2x3) -> double2x3;
fn @pos__double3x3(x : double3x3) -> double3x3;
fn @pos__double4x3(x : double4x3) -> double4x3;
fn @pos__double2x4(x : double2x4) -> double2x4;
fn @pos__double3x4(x : double3x4) -> double3x4;
fn @pos__double4x4(x : double4x4) -> double4x4;
fn @post_dec__int(x : int) -> int;
fn @post_dec__int2(x : int2) -> int2;
fn @post_dec__int3(x : int3) -> int3;
fn @post_dec__int4(x : int4) -> int4;
fn @post_dec__float(x : float) -> float;
fn @post_dec__float2(x : float2) -> float2;
fn @post_dec__float3(x : float3) -> float3;
fn @post_dec__float4(x : float4) -> float4;
fn @post_dec__double(x : double) -> double;
fn @post_dec__double2(x : double2) -> double2;
fn @post_dec__double3(x : double3) -> double3;
fn @post_dec__double4(x : double4) -> double4;
fn @pre_inc__int(x : int) -> int;
fn @pre_inc__int2(x : int2) -> int2;
fn @pre_inc__int3(x : int3) -> int3;
fn @pre_inc__int4(x : int4) -> int4;
fn @pre_inc__float(x : float) -> float;
fn @pre_inc__float2(x : float2) -> float2;
fn @pre_inc__float3(x : float3) -> float3;
fn @pre_inc__float4(x : float4) -> float4;
fn @pre_inc__double(x : double) -> double;
fn @pre_inc__double2(x : double2) -> double2;
fn @pre_inc__double3(x : double3) -> double3;
fn @pre_inc__double4(x : double4) -> double4;
fn @pre_dec__int(x : int) -> int;
fn @pre_dec__int2(x : int2) -> int2;
fn @pre_dec__int3(x : int3) -> int3;
fn @pre_dec__int4(x : int4) -> int4;
fn @pre_dec__float(x : float) -> float;
fn @pre_dec__float2(x : float2) -> float2;
fn @pre_dec__float3(x : float3) -> float3;
fn @pre_dec__float4(x : float4) -> float4;
fn @pre_dec__double(x : double) -> double;
fn @pre_dec__double2(x : double2) -> double2;
fn @pre_dec__double3(x : double3) -> double3;
fn @pre_dec__double4(x : double4) -> double4;
fn @post_inc__int(x : int) -> int;
fn @post_inc__int2(x : int2) -> int2;
fn @post_inc__int3(x : int3) -> int3;
fn @post_inc__int4(x : int4) -> int4;
fn @post_inc__float(x : float) -> float;
fn @post_inc__float2(x : float2) -> float2;
fn @post_inc__float3(x : float3) -> float3;
fn @post_inc__float4(x : float4) -> float4;
fn @post_inc__double(x : double) -> double;
fn @post_inc__double2(x : double2) -> double2;
fn @post_inc__double3(x : double3) -> double3;
fn @post_inc__double4(x : double4) -> double4;
fn @bit_xor_assign__int_int(x : int, y : int) -> int;
fn @bit_xor_assign__int2_int2(x : int2, y : int2) -> int2;
fn @bit_xor_assign__int2_int(x : int2, y : int) -> int2;
fn @bit_xor_assign__int3_int3(x : int3, y : int3) -> int3;
fn @bit_xor_assign__int3_int(x : int3, y : int) -> int3;
fn @bit_xor_assign__int4_int4(x : int4, y : int4) -> int4;
fn @bit_xor_assign__int4_int(x : int4, y : int) -> int4;
fn @bit_or_assign__int_int(x : int, y : int) -> int;
fn @bit_or_assign__int2_int2(x : int2, y : int2) -> int2;
fn @bit_or_assign__int2_int(x : int2, y : int) -> int2;
fn @bit_or_assign__int3_int3(x : int3, y : int3) -> int3;
fn @bit_or_assign__int3_int(x : int3, y : int) -> int3;
fn @bit_or_assign__int4_int4(x : int4, y : int4) -> int4;
fn @bit_or_assign__int4_int(x : int4, y : int) -> int4;
fn @bit_and_assign__int_int(x : int, y : int) -> int;
fn @bit_and_assign__int2_int2(x : int2, y : int2) -> int2;
fn @bit_and_assign__int2_int(x : int2, y : int) -> int2;
fn @bit_and_assign__int3_int3(x : int3, y : int3) -> int3;
fn @bit_and_assign__int3_int(x : int3, y : int) -> int3;
fn @bit_and_assign__int4_int4(x : int4, y : int4) -> int4;
fn @bit_and_assign__int4_int(x : int4, y : int) -> int4;
fn @bit_xor__int_int(x : int, y : int) -> int;
fn @bit_xor__int2_int2(x : int2, y : int2) -> int2;
fn @bit_xor__int_int2(x : int, y : int2) -> int2;
fn @bit_xor__int2_int(x : int2, y : int) -> int2;
fn @bit_xor__int3_int3(x : int3, y : int3) -> int3;
fn @bit_xor__int_int3(x : int, y : int3) -> int3;
fn @bit_xor__int3_int(x : int3, y : int) -> int3;
fn @bit_xor__int4_int4(x : int4, y : int4) -> int4;
fn @bit_xor__int_int4(x : int, y : int4) -> int4;
fn @bit_xor__int4_int(x : int4, y : int) -> int4;
fn @bit_or__int_int(x : int, y : int) -> int;
fn @bit_or__int2_int2(x : int2, y : int2) -> int2;
fn @bit_or__int_int2(x : int, y : int2) -> int2;
fn @bit_or__int2_int(x : int2, y : int) -> int2;
fn @bit_or__int3_int3(x : int3, y : int3) -> int3;
fn @bit_or__int_int3(x : int, y : int3) -> int3;
fn @bit_or__int3_int(x : int3, y : int) -> int3;
fn @bit_or__int4_int4(x : int4, y : int4) -> int4;
fn @bit_or__int_int4(x : int, y : int4) -> int4;
fn @bit_or__int4_int(x : int4, y : int) -> int4;
fn @bit_and__int_int(x : int, y : int) -> int;
fn @bit_and__int2_int2(x : int2, y : int2) -> int2;
fn @bit_and__int_int2(x : int, y : int2) -> int2;
fn @bit_and__int2_int(x : int2, y : int) -> int2;
fn @bit_and__int3_int3(x : int3, y : int3) -> int3;
fn @bit_and__int_int3(x : int, y : int3) -> int3;
fn @bit_and__int3_int(x : int3, y : int) -> int3;
fn @bit_and__int4_int4(x : int4, y : int4) -> int4;
fn @bit_and__int_int4(x : int, y : int4) -> int4;
fn @bit_and__int4_int(x : int4, y : int) -> int4;
fn @bit_comp__int(x : int) -> int;
fn @bit_comp__int2(x : int2) -> int2;
fn @bit_comp__int3(x : int3) -> int3;
fn @bit_comp__int4(x : int4) -> int4;
fn @ushiftr_assign__int_int(x : int, y : int) -> int;
fn @ushiftr_assign__int2_int2(x : int2, y : int2) -> int2;
fn @ushiftr_assign__int2_int(x : int2, y : int) -> int2;
fn @ushiftr_assign__int3_int3(x : int3, y : int3) -> int3;
fn @ushiftr_assign__int3_int(x : int3, y : int) -> int3;
fn @ushiftr_assign__int4_int4(x : int4, y : int4) -> int4;
fn @ushiftr_assign__int4_int(x : int4, y : int) -> int4;
fn @shiftr_assign__int_int(x : int, y : int) -> int;
fn @shiftr_assign__int2_int2(x : int2, y : int2) -> int2;
fn @shiftr_assign__int2_int(x : int2, y : int) -> int2;
fn @shiftr_assign__int3_int3(x : int3, y : int3) -> int3;
fn @shiftr_assign__int3_int(x : int3, y : int) -> int3;
fn @shiftr_assign__int4_int4(x : int4, y : int4) -> int4;
fn @shiftr_assign__int4_int(x : int4, y : int) -> int4;
fn @shiftl_assign__int_int(x : int, y : int) -> int;
fn @shiftl_assign__int2_int2(x : int2, y : int2) -> int2;
fn @shiftl_assign__int2_int(x : int2, y : int) -> int2;
fn @shiftl_assign__int3_int3(x : int3, y : int3) -> int3;
fn @shiftl_assign__int3_int(x : int3, y : int) -> int3;
fn @shiftl_assign__int4_int4(x : int4, y : int4) -> int4;
fn @shiftl_assign__int4_int(x : int4, y : int) -> int4;
fn @ushiftr__int_int(x : int, y : int) -> int;
fn @ushiftr__int2_int2(x : int2, y : int2) -> int2;
fn @ushiftr__int_int2(x : int, y : int2) -> int2;
fn @ushiftr__int2_int(x : int2, y : int) -> int2;
fn @ushiftr__int3_int3(x : int3, y : int3) -> int3;
fn @ushiftr__int_int3(x : int, y : int3) -> int3;
fn @ushiftr__int3_int(x : int3, y : int) -> int3;
fn @ushiftr__int4_int4(x : int4, y : int4) -> int4;
fn @ushiftr__int_int4(x : int, y : int4) -> int4;
fn @ushiftr__int4_int(x : int4, y : int) -> int4;
fn @shiftr__int_int(x : int, y : int) -> int;
fn @shiftr__int2_int2(x : int2, y : int2) -> int2;
fn @shiftr__int_int2(x : int, y : int2) -> int2;
fn @shiftr__int2_int(x : int2, y : int) -> int2;
fn @shiftr__int3_int3(x : int3, y : int3) -> int3;
fn @shiftr__int_int3(x : int, y : int3) -> int3;
fn @shiftr__int3_int(x : int3, y : int) -> int3;
fn @shiftr__int4_int4(x : int4, y : int4) -> int4;
fn @shiftr__int_int4(x : int, y : int4) -> int4;
fn @shiftr__int4_int(x : int4, y : int) -> int4;
fn @shiftl__int_int(x : int, y : int) -> int;
fn @shiftl__int2_int2(x : int2, y : int2) -> int2;
fn @shiftl__int_int2(x : int, y : int2) -> int2;
fn @shiftl__int2_int(x : int2, y : int) -> int2;
fn @shiftl__int3_int3(x : int3, y : int3) -> int3;
fn @shiftl__int_int3(x : int, y : int3) -> int3;
fn @shiftl__int3_int(x : int3, y : int) -> int3;
fn @shiftl__int4_int4(x : int4, y : int4) -> int4;
fn @shiftl__int_int4(x : int, y : int4) -> int4;
fn @shiftl__int4_int(x : int4, y : int) -> int4;
fn @mod_assign__int_int(x : int, y : int) -> int;
fn @mod_assign__int2_int2(x : int2, y : int2) -> int2;
fn @mod_assign__int2_int(x : int2, y : int) -> int2;
fn @mod_assign__int3_int3(x : int3, y : int3) -> int3;
fn @mod_assign__int3_int(x : int3, y : int) -> int3;
fn @mod_assign__int4_int4(x : int4, y : int4) -> int4;
fn @mod_assign__int4_int(x : int4, y : int) -> int4;
fn @mod__int_int(x : int, y : int) -> int;
fn @mod__int2_int2(x : int2, y : int2) -> int2;
fn @mod__int_int2(x : int, y : int2) -> int2;
fn @mod__int2_int(x : int2, y : int) -> int2;
fn @mod__int3_int3(x : int3, y : int3) -> int3;
fn @mod__int_int3(x : int, y : int3) -> int3;
fn @mod__int3_int(x : int3, y : int) -> int3;
fn @mod__int4_int4(x : int4, y : int4) -> int4;
fn @mod__int_int4(x : int, y : int4) -> int4;
fn @mod__int4_int(x : int4, y : int) -> int4;
fn @or__bool_bool(x : bool, y : bool) -> bool;
fn @or__bool2_bool2(x : bool2, y : bool2) -> bool2;
fn @or__bool_bool2(x : bool, y : bool2) -> bool2;
fn @or__bool2_bool(x : bool2, y : bool) -> bool2;
fn @or__bool3_bool3(x : bool3, y : bool3) -> bool3;
fn @or__bool_bool3(x : bool, y : bool3) -> bool3;
fn @or__bool3_bool(x : bool3, y : bool) -> bool3;
fn @or__bool4_bool4(x : bool4, y : bool4) -> bool4;
fn @or__bool_bool4(x : bool, y : bool4) -> bool4;
fn @or__bool4_bool(x : bool4, y : bool) -> bool4;
fn @and__bool_bool(x : bool, y : bool) -> bool;
fn @and__bool2_bool2(x : bool2, y : bool2) -> bool2;
fn @and__bool_bool2(x : bool, y : bool2) -> bool2;
fn @and__bool2_bool(x : bool2, y : bool) -> bool2;
fn @and__bool3_bool3(x : bool3, y : bool3) -> bool3;
fn @and__bool_bool3(x : bool, y : bool3) -> bool3;
fn @and__bool3_bool(x : bool3, y : bool) -> bool3;
fn @and__bool4_bool4(x : bool4, y : bool4) -> bool4;
fn @and__bool_bool4(x : bool, y : bool4) -> bool4;
fn @and__bool4_bool(x : bool4, y : bool) -> bool4;
fn @log_not__bool(x : bool) -> bool;
fn @log_not__bool2(x : bool2) -> bool2;
fn @log_not__bool3(x : bool3) -> bool3;
fn @log_not__bool4(x : bool4) -> bool4;
fn @assign__bool_bool(x : bool, y : bool) -> bool;
fn @assign__bool2_bool2(x : bool2, y : bool2) -> bool2;
fn @assign__bool2_bool(x : bool2, y : bool) -> bool2;
fn @assign__bool3_bool3(x : bool3, y : bool3) -> bool3;
fn @assign__bool3_bool(x : bool3, y : bool) -> bool3;
fn @assign__bool4_bool4(x : bool4, y : bool4) -> bool4;
fn @assign__bool4_bool(x : bool4, y : bool) -> bool4;
fn @assign__int_int(x : int, y : int) -> int;
fn @assign__int2_int2(x : int2, y : int2) -> int2;
fn @assign__int2_int(x : int2, y : int) -> int2;
fn @assign__int3_int3(x : int3, y : int3) -> int3;
fn @assign__int3_int(x : int3, y : int) -> int3;
fn @assign__int4_int4(x : int4, y : int4) -> int4;
fn @assign__int4_int(x : int4, y : int) -> int4;
fn @assign__float_float(x : float, y : float) -> float;
fn @assign__float2_float2(x : float2, y : float2) -> float2;
fn @assign__float2_float(x : float2, y : float) -> float2;
fn @assign__float3_float3(x : float3, y : float3) -> float3;
fn @assign__float3_float(x : float3, y : float) -> float3;
fn @assign__float4_float4(x : float4, y : float4) -> float4;
fn @assign__float4_float(x : float4, y : float) -> float4;
fn @assign__double_double(x : double, y : double) -> double;
fn @assign__double2_double2(x : double2, y : double2) -> double2;
fn @assign__double2_double(x : double2, y : double) -> double2;
fn @assign__double3_double3(x : double3, y : double3) -> double3;
fn @assign__double3_double(x : double3, y : double) -> double3;
fn @assign__double4_double4(x : double4, y : double4) -> double4;
fn @assign__double4_double(x : double4, y : double) -> double4;
fn @assign__float2x2_float2x2(x : float2x2, y : float2x2) -> float2x2;
fn @assign__float3x2_float3x2(x : float3x2, y : float3x2) -> float3x2;
fn @assign__float4x2_float4x2(x : float4x2, y : float4x2) -> float4x2;
fn @assign__float2x3_float2x3(x : float2x3, y : float2x3) -> float2x3;
fn @assign__float3x3_float3x3(x : float3x3, y : float3x3) -> float3x3;
fn @assign__float4x3_float4x3(x : float4x3, y : float4x3) -> float4x3;
fn @assign__float2x4_float2x4(x : float2x4, y : float2x4) -> float2x4;
fn @assign__float3x4_float3x4(x : float3x4, y : float3x4) -> float3x4;
fn @assign__float4x4_float4x4(x : float4x4, y : float4x4) -> float4x4;
fn @assign__double2x2_double2x2(x : double2x2, y : double2x2) -> double2x2;
fn @assign__double3x2_double3x2(x : double3x2, y : double3x2) -> double3x2;
fn @assign__double4x2_double4x2(x : double4x2, y : double4x2) -> double4x2;
fn @assign__double2x3_double2x3(x : double2x3, y : double2x3) -> double2x3;
fn @assign__double3x3_double3x3(x : double3x3, y : double3x3) -> double3x3;
fn @assign__double4x3_double4x3(x : double4x3, y : double4x3) -> double4x3;
fn @assign__double2x4_double2x4(x : double2x4, y : double2x4) -> double2x4;
fn @assign__double3x4_double3x4(x : double3x4, y : double3x4) -> double3x4;
fn @assign__double4x4_double4x4(x : double4x4, y : double4x4) -> double4x4;
fn @assign__color_color(x : color, y : color) -> color;
fn @assign__string_string(x : string, y : string) -> string;
fn @mul_assign__float2_float2x2(x : float2, y : float2x2) -> float2;
fn @mul_assign__float3_float3x3(x : float3, y : float3x3) -> float3;
fn @mul_assign__float4_float4x4(x : float4, y : float4x4) -> float4;
fn @mul_assign__double2_double2x2(x : double2, y : double2x2) -> double2;
fn @mul_assign__double3_double3x3(x : double3, y : double3x3) -> double3;
fn @mul_assign__double4_double4x4(x : double4, y : double4x4) -> double4;
fn @mul_assign__float2x2_float2x2(x : float2x2, y : float2x2) -> float2x2;
fn @mul_assign__double2x2_double2x2(x : double2x2, y : double2x2) -> double2x2;
fn @mul_assign__float3x3_float3x3(x : float3x3, y : float3x3) -> float3x3;
fn @mul_assign__double3x3_double3x3(x : double3x3, y : double3x3) -> double3x3;
fn @mul_assign__float4x4_float4x4(x : float4x4, y : float4x4) -> float4x4;
fn @mul_assign__double4x4_double4x4(x : double4x4, y : double4x4) -> double4x4;
fn @mul_assign__float2x2_float(x : float2x2, y : float) -> float2x2;
fn @mul_assign__float3x2_float(x : float3x2, y : float) -> float3x2;
fn @mul_assign__float4x2_float(x : float4x2, y : float) -> float4x2;
fn @mul_assign__float2x3_float(x : float2x3, y : float) -> float2x3;
fn @mul_assign__float3x3_float(x : float3x3, y : float) -> float3x3;
fn @mul_assign__float4x3_float(x : float4x3, y : float) -> float4x3;
fn @mul_assign__float2x4_float(x : float2x4, y : float) -> float2x4;
fn @mul_assign__float3x4_float(x : float3x4, y : float) -> float3x4;
fn @mul_assign__float4x4_float(x : float4x4, y : float) -> float4x4;
fn @mul_assign__double2x2_double(x : double2x2, y : double) -> double2x2;
fn @mul_assign__double3x2_double(x : double3x2, y : double) -> double3x2;
fn @mul_assign__double4x2_double(x : double4x2, y : double) -> double4x2;
fn @mul_assign__double2x3_double(x : double2x3, y : double) -> double2x3;
fn @mul_assign__double3x3_double(x : double3x3, y : double) -> double3x3;
fn @mul_assign__double4x3_double(x : double4x3, y : double) -> double4x3;
fn @mul_assign__double2x4_double(x : double2x4, y : double) -> double2x4;
fn @mul_assign__double3x4_double(x : double3x4, y : double) -> double3x4;
fn @mul_assign__double4x4_double(x : double4x4, y : double) -> double4x4;
fn @mul_assign__int_int(x : int, y : int) -> int;
fn @mul_assign__int2_int2(x : int2, y : int2) -> int2;
fn @mul_assign__int2_int(x : int2, y : int) -> int2;
fn @mul_assign__int3_int3(x : int3, y : int3) -> int3;
fn @mul_assign__int3_int(x : int3, y : int) -> int3;
fn @mul_assign__int4_int4(x : int4, y : int4) -> int4;
fn @mul_assign__int4_int(x : int4, y : int) -> int4;
fn @mul_assign__float_float(x : float, y : float) -> float;
fn @mul_assign__float2_float2(x : float2, y : float2) -> float2;
fn @mul_assign__float2_float(x : float2, y : float) -> float2;
*/
fn @mul_assign__float3_float3(x : &mut float3, y : float3) -> float3{
    let temp = mul__float3_float3(*x,y);
    *x = temp;
    temp
}

fn @mul_assign__float3_float(x : &mut float3, y : float) -> float3{
    let temp = mul__float3_float(*x, y);
    *x = temp;
    temp
}
/*
fn @mul_assign__float4_float4(x : float4, y : float4) -> float4;
fn @mul_assign__float4_float(x : float4, y : float) -> float4;
fn @mul_assign__double_double(x : double, y : double) -> double;
fn @mul_assign__double2_double2(x : double2, y : double2) -> double2;
fn @mul_assign__double2_double(x : double2, y : double) -> double2;
fn @mul_assign__double3_double3(x : double3, y : double3) -> double3;
fn @mul_assign__double3_double(x : double3, y : double) -> double3;
fn @mul_assign__double4_double4(x : double4, y : double4) -> double4;
fn @mul_assign__double4_double(x : double4, y : double) -> double4;
fn @mul_assign__color_color(x : color, y : color) -> color;
fn @mul_assign__color_float(x : color, y : float) -> color;
fn @mul__float2x2_float2x2(x : float2x2, y : float2x2) -> float2x2;
fn @mul__float2x2_float2x3(x : float2x2, y : float2x3) -> float2x3;
fn @mul__float2x2_float2x4(x : float2x2, y : float2x4) -> float2x4;
fn @mul__float2x3_float3x2(x : float2x3, y : float3x2) -> float2x2;
fn @mul__float2x3_float3x3(x : float2x3, y : float3x3) -> float2x3;
fn @mul__float2x3_float3x4(x : float2x3, y : float3x4) -> float2x4;
fn @mul__float2x4_float4x2(x : float2x4, y : float4x2) -> float2x2;
fn @mul__float2x4_float4x3(x : float2x4, y : float4x3) -> float2x3;
fn @mul__float2x4_float4x4(x : float2x4, y : float4x4) -> float2x4;
fn @mul__float3x2_float2x2(x : float3x2, y : float2x2) -> float3x2;
fn @mul__float3x2_float2x3(x : float3x2, y : float2x3) -> float3x3;
fn @mul__float3x2_float2x4(x : float3x2, y : float2x4) -> float3x4;
fn @mul__float3x3_float3x2(x : float3x3, y : float3x2) -> float3x2;
fn @mul__float3x3_float3x3(x : float3x3, y : float3x3) -> float3x3;
fn @mul__float3x3_float3x4(x : float3x3, y : float3x4) -> float3x4;
fn @mul__float3x4_float4x2(x : float3x4, y : float4x2) -> float3x2;
fn @mul__float3x4_float4x3(x : float3x4, y : float4x3) -> float3x3;
fn @mul__float3x4_float4x4(x : float3x4, y : float4x4) -> float3x4;
fn @mul__float4x2_float2x2(x : float4x2, y : float2x2) -> float4x2;
fn @mul__float4x2_float2x3(x : float4x2, y : float2x3) -> float4x3;
fn @mul__float4x2_float2x4(x : float4x2, y : float2x4) -> float4x4;
fn @mul__float4x3_float3x2(x : float4x3, y : float3x2) -> float4x2;
fn @mul__float4x3_float3x3(x : float4x3, y : float3x3) -> float4x3;
fn @mul__float4x3_float3x4(x : float4x3, y : float3x4) -> float4x4;
fn @mul__float4x4_float4x2(x : float4x4, y : float4x2) -> float4x2;
fn @mul__float4x4_float4x3(x : float4x4, y : float4x3) -> float4x3;
fn @mul__float4x4_float4x4(x : float4x4, y : float4x4) -> float4x4;
fn @mul__double2x2_double2x2(x : double2x2, y : double2x2) -> double2x2;
fn @mul__double2x2_double2x3(x : double2x2, y : double2x3) -> double2x3;
fn @mul__double2x2_double2x4(x : double2x2, y : double2x4) -> double2x4;
fn @mul__double2x3_double3x2(x : double2x3, y : double3x2) -> double2x2;
fn @mul__double2x3_double3x3(x : double2x3, y : double3x3) -> double2x3;
fn @mul__double2x3_double3x4(x : double2x3, y : double3x4) -> double2x4;
fn @mul__double2x4_double4x2(x : double2x4, y : double4x2) -> double2x2;
fn @mul__double2x4_double4x3(x : double2x4, y : double4x3) -> double2x3;
fn @mul__double2x4_double4x4(x : double2x4, y : double4x4) -> double2x4;
fn @mul__double3x2_double2x2(x : double3x2, y : double2x2) -> double3x2;
fn @mul__double3x2_double2x3(x : double3x2, y : double2x3) -> double3x3;
fn @mul__double3x2_double2x4(x : double3x2, y : double2x4) -> double3x4;
fn @mul__double3x3_double3x2(x : double3x3, y : double3x2) -> double3x2;
fn @mul__double3x3_double3x3(x : double3x3, y : double3x3) -> double3x3;
fn @mul__double3x3_double3x4(x : double3x3, y : double3x4) -> double3x4;
fn @mul__double3x4_double4x2(x : double3x4, y : double4x2) -> double3x2;
fn @mul__double3x4_double4x3(x : double3x4, y : double4x3) -> double3x3;
fn @mul__double3x4_double4x4(x : double3x4, y : double4x4) -> double3x4;
fn @mul__double4x2_double2x2(x : double4x2, y : double2x2) -> double4x2;
fn @mul__double4x2_double2x3(x : double4x2, y : double2x3) -> double4x3;
fn @mul__double4x2_double2x4(x : double4x2, y : double2x4) -> double4x4;
fn @mul__double4x3_double3x2(x : double4x3, y : double3x2) -> double4x2;
fn @mul__double4x3_double3x3(x : double4x3, y : double3x3) -> double4x3;
fn @mul__double4x3_double3x4(x : double4x3, y : double3x4) -> double4x4;
fn @mul__double4x4_double4x2(x : double4x4, y : double4x2) -> double4x2;
fn @mul__double4x4_double4x3(x : double4x4, y : double4x3) -> double4x3;
fn @mul__double4x4_double4x4(x : double4x4, y : double4x4) -> double4x4;
fn @mul__float2x2_float2(x : float2x2, y : float2) -> float2;
fn @mul__float2x3_float3(x : float2x3, y : float3) -> float2;
fn @mul__float2x4_float4(x : float2x4, y : float4) -> float2;
fn @mul__float3x2_float2(x : float3x2, y : float2) -> float3;
fn @mul__float3x3_float3(x : float3x3, y : float3) -> float3;
fn @mul__float3x4_float4(x : float3x4, y : float4) -> float3;
fn @mul__float4x2_float2(x : float4x2, y : float2) -> float4;
fn @mul__float4x3_float3(x : float4x3, y : float3) -> float4;
fn @mul__float4x4_float4(x : float4x4, y : float4) -> float4;
fn @mul__double2x2_double2(x : double2x2, y : double2) -> double2;
fn @mul__double2x3_double3(x : double2x3, y : double3) -> double2;
fn @mul__double2x4_double4(x : double2x4, y : double4) -> double2;
fn @mul__double3x2_double2(x : double3x2, y : double2) -> double3;
fn @mul__double3x3_double3(x : double3x3, y : double3) -> double3;
fn @mul__double3x4_double4(x : double3x4, y : double4) -> double3;
fn @mul__double4x2_double2(x : double4x2, y : double2) -> double4;
fn @mul__double4x3_double3(x : double4x3, y : double3) -> double4;
fn @mul__double4x4_double4(x : double4x4, y : double4) -> double4;
fn @mul__float2_float2x2(x : float2, y : float2x2) -> float2;
fn @mul__float2_float2x3(x : float2, y : float2x3) -> float3;
fn @mul__float2_float2x4(x : float2, y : float2x4) -> float4;
fn @mul__float3_float3x2(x : float3, y : float3x2) -> float2;
fn @mul__float3_float3x3(x : float3, y : float3x3) -> float3;
fn @mul__float3_float3x4(x : float3, y : float3x4) -> float4;
fn @mul__float4_float4x2(x : float4, y : float4x2) -> float2;
fn @mul__float4_float4x3(x : float4, y : float4x3) -> float3;
fn @mul__float4_float4x4(x : float4, y : float4x4) -> float4;
fn @mul__double2_double2x2(x : double2, y : double2x2) -> double2;
fn @mul__double2_double2x3(x : double2, y : double2x3) -> double3;
fn @mul__double2_double2x4(x : double2, y : double2x4) -> double4;
fn @mul__double3_double3x2(x : double3, y : double3x2) -> double2;
fn @mul__double3_double3x3(x : double3, y : double3x3) -> double3;
fn @mul__double3_double3x4(x : double3, y : double3x4) -> double4;
fn @mul__double4_double4x2(x : double4, y : double4x2) -> double2;
fn @mul__double4_double4x3(x : double4, y : double4x3) -> double3;
fn @mul__double4_double4x4(x : double4, y : double4x4) -> double4;
fn @mul__float2x2_float(x : float2x2, y : float) -> float2x2;
fn @mul__float_float2x2(x : float, y : float2x2) -> float2x2;
fn @mul__float3x2_float(x : float3x2, y : float) -> float3x2;
fn @mul__float_float3x2(x : float, y : float3x2) -> float3x2;
fn @mul__float4x2_float(x : float4x2, y : float) -> float4x2;
fn @mul__float_float4x2(x : float, y : float4x2) -> float4x2;
fn @mul__float2x3_float(x : float2x3, y : float) -> float2x3;
fn @mul__float_float2x3(x : float, y : float2x3) -> float2x3;
fn @mul__float3x3_float(x : float3x3, y : float) -> float3x3;
fn @mul__float_float3x3(x : float, y : float3x3) -> float3x3;
fn @mul__float4x3_float(x : float4x3, y : float) -> float4x3;
fn @mul__float_float4x3(x : float, y : float4x3) -> float4x3;
fn @mul__float2x4_float(x : float2x4, y : float) -> float2x4;
fn @mul__float_float2x4(x : float, y : float2x4) -> float2x4;
fn @mul__float3x4_float(x : float3x4, y : float) -> float3x4;
fn @mul__float_float3x4(x : float, y : float3x4) -> float3x4;
fn @mul__float4x4_float(x : float4x4, y : float) -> float4x4;
fn @mul__float_float4x4(x : float, y : float4x4) -> float4x4;
fn @mul__double2x2_double(x : double2x2, y : double) -> double2x2;
fn @mul__double_double2x2(x : double, y : double2x2) -> double2x2;
fn @mul__double3x2_double(x : double3x2, y : double) -> double3x2;
fn @mul__double_double3x2(x : double, y : double3x2) -> double3x2;
fn @mul__double4x2_double(x : double4x2, y : double) -> double4x2;
fn @mul__double_double4x2(x : double, y : double4x2) -> double4x2;
fn @mul__double2x3_double(x : double2x3, y : double) -> double2x3;
fn @mul__double_double2x3(x : double, y : double2x3) -> double2x3;
fn @mul__double3x3_double(x : double3x3, y : double) -> double3x3;
fn @mul__double_double3x3(x : double, y : double3x3) -> double3x3;
fn @mul__double4x3_double(x : double4x3, y : double) -> double4x3;
fn @mul__double_double4x3(x : double, y : double4x3) -> double4x3;
fn @mul__double2x4_double(x : double2x4, y : double) -> double2x4;
fn @mul__double_double2x4(x : double, y : double2x4) -> double2x4;
fn @mul__double3x4_double(x : double3x4, y : double) -> double3x4;
fn @mul__double_double3x4(x : double, y : double3x4) -> double3x4;
fn @mul__double4x4_double(x : double4x4, y : double) -> double4x4;
fn @mul__double_double4x4(x : double, y : double4x4) -> double4x4;
fn @mul__int_int(x : int, y : int) -> int;
fn @mul__int2_int2(x : int2, y : int2) -> int2;
fn @mul__int_int2(x : int, y : int2) -> int2;
fn @mul__int2_int(x : int2, y : int) -> int2;
fn @mul__int3_int3(x : int3, y : int3) -> int3;
fn @mul__int_int3(x : int, y : int3) -> int3;
fn @mul__int3_int(x : int3, y : int) -> int3;
fn @mul__int4_int4(x : int4, y : int4) -> int4;
fn @mul__int_int4(x : int, y : int4) -> int4;
fn @mul__int4_int(x : int4, y : int) -> int4;
fn @mul__float_float(x : float, y : float) -> float;
fn @mul__float2_float2(x : float2, y : float2) -> float2;
fn @mul__float_float2(x : float, y : float2) -> float2;
fn @mul__float2_float(x : float2, y : float) -> float2;
*/
fn @mul__float3_float3(x : float3, y : float3) -> float3{
    [x(0) * y(0), x(1) * y(1), x(2) * y(2)]
}
/*
fn @mul__float_float3(x : float, y : float3) -> float3;
*/
fn @mul__float3_float(x : float3, y : float) -> float3{
    [x(0) * y, x(1) * y, x(2) * y]
}
/*
fn @mul__float4_float4(x : float4, y : float4) -> float4;
fn @mul__float_float4(x : float, y : float4) -> float4;
fn @mul__float4_float(x : float4, y : float) -> float4;
fn @mul__double_double(x : double, y : double) -> double;
fn @mul__double2_double2(x : double2, y : double2) -> double2;
fn @mul__double_double2(x : double, y : double2) -> double2;
fn @mul__double2_double(x : double2, y : double) -> double2;
fn @mul__double3_double3(x : double3, y : double3) -> double3;
fn @mul__double_double3(x : double, y : double3) -> double3;
fn @mul__double3_double(x : double3, y : double) -> double3;
fn @mul__double4_double4(x : double4, y : double4) -> double4;
fn @mul__double_double4(x : double, y : double4) -> double4;
fn @mul__double4_double(x : double4, y : double) -> double4;
*/
fn @mul__color_color(x : color, y : color) -> color{
    @@mul__float3_float3(x,y)
}
/*
fn @mul__float_color(x : float, y : color) -> color;
fn @mul__color_float(x : color, y : float) -> color;
fn @geq__int_int(x : int, y : int) -> bool;
fn @geq__float_float(x : float, y : float) -> bool;
fn @geq__double_double(x : double, y : double) -> bool;
fn @ge__int_int(x : int, y : int) -> bool;
fn @ge__float_float(x : float, y : float) -> bool;
fn @ge__double_double(x : double, y : double) -> bool;
fn @leq__int_int(x : int, y : int) -> bool;
fn @leq__float_float(x : float, y : float) -> bool;
fn @leq__double_double(x : double, y : double) -> bool;
fn @le__int_int(x : int, y : int) -> bool;
fn @le__float_float(x : float, y : float) -> bool;
fn @le__double_double(x : double, y : double) -> bool;
fn @sub__int_int(x : int, y : int) -> int;
fn @sub__int2_int2(x : int2, y : int2) -> int2;
fn @sub__int_int2(x : int, y : int2) -> int2;
fn @sub__int2_int(x : int2, y : int) -> int2;
fn @sub__int3_int3(x : int3, y : int3) -> int3;
fn @sub__int_int3(x : int, y : int3) -> int3;
fn @sub__int3_int(x : int3, y : int) -> int3;
fn @sub__int4_int4(x : int4, y : int4) -> int4;
fn @sub__int_int4(x : int, y : int4) -> int4;
fn @sub__int4_int(x : int4, y : int) -> int4;
fn @sub__float_float(x : float, y : float) -> float;
fn @sub__float2_float2(x : float2, y : float2) -> float2;
fn @sub__float_float2(x : float, y : float2) -> float2;
fn @sub__float2_float(x : float2, y : float) -> float2;
*/
fn @sub__float3_float3(x : float3, y : float3) -> float3{
    [x(0) - y(0), x(1) - y(1), x(2) - y(2)]
}
/*
fn @sub__float_float3(x : float, y : float3) -> float3;
fn @sub__float3_float(x : float3, y : float) -> float3;
fn @sub__float4_float4(x : float4, y : float4) -> float4;
fn @sub__float_float4(x : float, y : float4) -> float4;
fn @sub__float4_float(x : float4, y : float) -> float4;
fn @sub__double_double(x : double, y : double) -> double;
fn @sub__double2_double2(x : double2, y : double2) -> double2;
fn @sub__double_double2(x : double, y : double2) -> double2;
fn @sub__double2_double(x : double2, y : double) -> double2;
fn @sub__double3_double3(x : double3, y : double3) -> double3;
fn @sub__double_double3(x : double, y : double3) -> double3;
fn @sub__double3_double(x : double3, y : double) -> double3;
fn @sub__double4_double4(x : double4, y : double4) -> double4;
fn @sub__double_double4(x : double, y : double4) -> double4;
fn @sub__double4_double(x : double4, y : double) -> double4;
fn @sub__color_color(x : color, y : color) -> color;
fn @sub__float_color(x : float, y : color) -> color;
fn @sub__color_float(x : color, y : float) -> color;
fn @sub__float2x2_float2x2(x : float2x2, y : float2x2) -> float2x2;
fn @sub__float3x2_float3x2(x : float3x2, y : float3x2) -> float3x2;
fn @sub__float4x2_float4x2(x : float4x2, y : float4x2) -> float4x2;
fn @sub__float2x3_float2x3(x : float2x3, y : float2x3) -> float2x3;
fn @sub__float3x3_float3x3(x : float3x3, y : float3x3) -> float3x3;
fn @sub__float4x3_float4x3(x : float4x3, y : float4x3) -> float4x3;
fn @sub__float2x4_float2x4(x : float2x4, y : float2x4) -> float2x4;
fn @sub__float3x4_float3x4(x : float3x4, y : float3x4) -> float3x4;
fn @sub__float4x4_float4x4(x : float4x4, y : float4x4) -> float4x4;
fn @sub__double2x2_double2x2(x : double2x2, y : double2x2) -> double2x2;
fn @sub__double3x2_double3x2(x : double3x2, y : double3x2) -> double3x2;
fn @sub__double4x2_double4x2(x : double4x2, y : double4x2) -> double4x2;
fn @sub__double2x3_double2x3(x : double2x3, y : double2x3) -> double2x3;
fn @sub__double3x3_double3x3(x : double3x3, y : double3x3) -> double3x3;
fn @sub__double4x3_double4x3(x : double4x3, y : double4x3) -> double4x3;
fn @sub__double2x4_double2x4(x : double2x4, y : double2x4) -> double2x4;
fn @sub__double3x4_double3x4(x : double3x4, y : double3x4) -> double3x4;
fn @sub__double4x4_double4x4(x : double4x4, y : double4x4) -> double4x4;
fn @add__int_int(x : int, y : int) -> int;
fn @add__int2_int2(x : int2, y : int2) -> int2;
fn @add__int_int2(x : int, y : int2) -> int2;
fn @add__int2_int(x : int2, y : int) -> int2;
fn @add__int3_int3(x : int3, y : int3) -> int3;
fn @add__int_int3(x : int, y : int3) -> int3;
fn @add__int3_int(x : int3, y : int) -> int3;
fn @add__int4_int4(x : int4, y : int4) -> int4;
fn @add__int_int4(x : int, y : int4) -> int4;
fn @add__int4_int(x : int4, y : int) -> int4;
fn @add__float_float(x : float, y : float) -> float;
fn @add__float2_float2(x : float2, y : float2) -> float2;
fn @add__float_float2(x : float, y : float2) -> float2;
fn @add__float2_float(x : float2, y : float) -> float2;
*/
fn @add__float3_float3(x : float3, y : float3) -> float3{
    [x(0) + y(0), x(1) + y(1), x(2) + y(2)]
}
/*
fn @add__float_float3(x : float, y : float3) -> float3;
fn @add__float3_float(x : float3, y : float) -> float3;
fn @add__float4_float4(x : float4, y : float4) -> float4;
fn @add__float_float4(x : float, y : float4) -> float4;
fn @add__float4_float(x : float4, y : float) -> float4;
fn @add__double_double(x : double, y : double) -> double;
fn @add__double2_double2(x : double2, y : double2) -> double2;
fn @add__double_double2(x : double, y : double2) -> double2;
fn @add__double2_double(x : double2, y : double) -> double2;
fn @add__double3_double3(x : double3, y : double3) -> double3;
fn @add__double_double3(x : double, y : double3) -> double3;
fn @add__double3_double(x : double3, y : double) -> double3;
fn @add__double4_double4(x : double4, y : double4) -> double4;
fn @add__double_double4(x : double, y : double4) -> double4;
fn @add__double4_double(x : double4, y : double) -> double4;
fn @add__color_color(x : color, y : color) -> color;
fn @add__float_color(x : float, y : color) -> color;
fn @add__color_float(x : color, y : float) -> color;
fn @add__float2x2_float2x2(x : float2x2, y : float2x2) -> float2x2;
fn @add__float3x2_float3x2(x : float3x2, y : float3x2) -> float3x2;
fn @add__float4x2_float4x2(x : float4x2, y : float4x2) -> float4x2;
fn @add__float2x3_float2x3(x : float2x3, y : float2x3) -> float2x3;
fn @add__float3x3_float3x3(x : float3x3, y : float3x3) -> float3x3;
fn @add__float4x3_float4x3(x : float4x3, y : float4x3) -> float4x3;
fn @add__float2x4_float2x4(x : float2x4, y : float2x4) -> float2x4;
fn @add__float3x4_float3x4(x : float3x4, y : float3x4) -> float3x4;
fn @add__float4x4_float4x4(x : float4x4, y : float4x4) -> float4x4;
fn @add__double2x2_double2x2(x : double2x2, y : double2x2) -> double2x2;
fn @add__double3x2_double3x2(x : double3x2, y : double3x2) -> double3x2;
fn @add__double4x2_double4x2(x : double4x2, y : double4x2) -> double4x2;
fn @add__double2x3_double2x3(x : double2x3, y : double2x3) -> double2x3;
fn @add__double3x3_double3x3(x : double3x3, y : double3x3) -> double3x3;
fn @add__double4x3_double4x3(x : double4x3, y : double4x3) -> double4x3;
fn @add__double2x4_double2x4(x : double2x4, y : double2x4) -> double2x4;
fn @add__double3x4_double3x4(x : double3x4, y : double3x4) -> double3x4;
fn @add__double4x4_double4x4(x : double4x4, y : double4x4) -> double4x4;
fn @neq__bool_bool(x : bool, y : bool) -> bool;
fn @neq__bool2_bool2(x : bool2, y : bool2) -> bool;
fn @neq__bool_bool2(x : bool, y : bool2) -> bool;
fn @neq__bool2_bool(x : bool2, y : bool) -> bool;
fn @neq__bool3_bool3(x : bool3, y : bool3) -> bool;
fn @neq__bool_bool3(x : bool, y : bool3) -> bool;
fn @neq__bool3_bool(x : bool3, y : bool) -> bool;
fn @neq__bool4_bool4(x : bool4, y : bool4) -> bool;
fn @neq__bool_bool4(x : bool, y : bool4) -> bool;
fn @neq__bool4_bool(x : bool4, y : bool) -> bool;
fn @neq__int_int(x : int, y : int) -> bool;
fn @neq__int2_int2(x : int2, y : int2) -> bool;
fn @neq__int_int2(x : int, y : int2) -> bool;
fn @neq__int2_int(x : int2, y : int) -> bool;
fn @neq__int3_int3(x : int3, y : int3) -> bool;
fn @neq__int_int3(x : int, y : int3) -> bool;
fn @neq__int3_int(x : int3, y : int) -> bool;
fn @neq__int4_int4(x : int4, y : int4) -> bool;
fn @neq__int_int4(x : int, y : int4) -> bool;
fn @neq__int4_int(x : int4, y : int) -> bool;
fn @neq__float_float(x : float, y : float) -> bool;
fn @neq__float2_float2(x : float2, y : float2) -> bool;
fn @neq__float_float2(x : float, y : float2) -> bool;
fn @neq__float2_float(x : float2, y : float) -> bool;
fn @neq__float3_float3(x : float3, y : float3) -> bool;
fn @neq__float_float3(x : float, y : float3) -> bool;
fn @neq__float3_float(x : float3, y : float) -> bool;
fn @neq__float4_float4(x : float4, y : float4) -> bool;
fn @neq__float_float4(x : float, y : float4) -> bool;
fn @neq__float4_float(x : float4, y : float) -> bool;
fn @neq__double_double(x : double, y : double) -> bool;
fn @neq__double2_double2(x : double2, y : double2) -> bool;
fn @neq__double_double2(x : double, y : double2) -> bool;
fn @neq__double2_double(x : double2, y : double) -> bool;
fn @neq__double3_double3(x : double3, y : double3) -> bool;
fn @neq__double_double3(x : double, y : double3) -> bool;
fn @neq__double3_double(x : double3, y : double) -> bool;
fn @neq__double4_double4(x : double4, y : double4) -> bool;
fn @neq__double_double4(x : double, y : double4) -> bool;
fn @neq__double4_double(x : double4, y : double) -> bool;
fn @neq__color_color(x : color, y : color) -> bool;
fn @neq__string_string(x : string, y : string) -> bool;
fn @neq__float2x2_float2x2(x : float2x2, y : float2x2) -> bool;
fn @neq__float3x2_float3x2(x : float3x2, y : float3x2) -> bool;
fn @neq__float4x2_float4x2(x : float4x2, y : float4x2) -> bool;
fn @neq__float2x3_float2x3(x : float2x3, y : float2x3) -> bool;
fn @neq__float3x3_float3x3(x : float3x3, y : float3x3) -> bool;
fn @neq__float4x3_float4x3(x : float4x3, y : float4x3) -> bool;
fn @neq__float2x4_float2x4(x : float2x4, y : float2x4) -> bool;
fn @neq__float3x4_float3x4(x : float3x4, y : float3x4) -> bool;
fn @neq__float4x4_float4x4(x : float4x4, y : float4x4) -> bool;
fn @neq__double2x2_double2x2(x : double2x2, y : double2x2) -> bool;
fn @neq__double3x2_double3x2(x : double3x2, y : double3x2) -> bool;
fn @neq__double4x2_double4x2(x : double4x2, y : double4x2) -> bool;
fn @neq__double2x3_double2x3(x : double2x3, y : double2x3) -> bool;
fn @neq__double3x3_double3x3(x : double3x3, y : double3x3) -> bool;
fn @neq__double4x3_double4x3(x : double4x3, y : double4x3) -> bool;
fn @neq__double2x4_double2x4(x : double2x4, y : double2x4) -> bool;
fn @neq__double3x4_double3x4(x : double3x4, y : double3x4) -> bool;
fn @neq__double4x4_double4x4(x : double4x4, y : double4x4) -> bool;
fn @eq__bool_bool(x : bool, y : bool) -> bool;
fn @eq__bool2_bool2(x : bool2, y : bool2) -> bool;
fn @eq__bool_bool2(x : bool, y : bool2) -> bool;
fn @eq__bool2_bool(x : bool2, y : bool) -> bool;
fn @eq__bool3_bool3(x : bool3, y : bool3) -> bool;
fn @eq__bool_bool3(x : bool, y : bool3) -> bool;
fn @eq__bool3_bool(x : bool3, y : bool) -> bool;
fn @eq__bool4_bool4(x : bool4, y : bool4) -> bool;
fn @eq__bool_bool4(x : bool, y : bool4) -> bool;
fn @eq__bool4_bool(x : bool4, y : bool) -> bool;
fn @eq__int_int(x : int, y : int) -> bool;
fn @eq__int2_int2(x : int2, y : int2) -> bool;
fn @eq__int_int2(x : int, y : int2) -> bool;
fn @eq__int2_int(x : int2, y : int) -> bool;
fn @eq__int3_int3(x : int3, y : int3) -> bool;
fn @eq__int_int3(x : int, y : int3) -> bool;
fn @eq__int3_int(x : int3, y : int) -> bool;
fn @eq__int4_int4(x : int4, y : int4) -> bool;
fn @eq__int_int4(x : int, y : int4) -> bool;
fn @eq__int4_int(x : int4, y : int) -> bool;
fn @eq__float_float(x : float, y : float) -> bool;
fn @eq__float2_float2(x : float2, y : float2) -> bool;
fn @eq__float_float2(x : float, y : float2) -> bool;
fn @eq__float2_float(x : float2, y : float) -> bool;
fn @eq__float3_float3(x : float3, y : float3) -> bool;
fn @eq__float_float3(x : float, y : float3) -> bool;
fn @eq__float3_float(x : float3, y : float) -> bool;
fn @eq__float4_float4(x : float4, y : float4) -> bool;
fn @eq__float_float4(x : float, y : float4) -> bool;
fn @eq__float4_float(x : float4, y : float) -> bool;
fn @eq__double_double(x : double, y : double) -> bool;
fn @eq__double2_double2(x : double2, y : double2) -> bool;
fn @eq__double_double2(x : double, y : double2) -> bool;
fn @eq__double2_double(x : double2, y : double) -> bool;
fn @eq__double3_double3(x : double3, y : double3) -> bool;
fn @eq__double_double3(x : double, y : double3) -> bool;
fn @eq__double3_double(x : double3, y : double) -> bool;
fn @eq__double4_double4(x : double4, y : double4) -> bool;
fn @eq__double_double4(x : double, y : double4) -> bool;
fn @eq__double4_double(x : double4, y : double) -> bool;
fn @eq__color_color(x : color, y : color) -> bool;
fn @eq__string_string(x : string, y : string) -> bool;
fn @eq__float2x2_float2x2(x : float2x2, y : float2x2) -> bool;
fn @eq__float3x2_float3x2(x : float3x2, y : float3x2) -> bool;
fn @eq__float4x2_float4x2(x : float4x2, y : float4x2) -> bool;
fn @eq__float2x3_float2x3(x : float2x3, y : float2x3) -> bool;
fn @eq__float3x3_float3x3(x : float3x3, y : float3x3) -> bool;
fn @eq__float4x3_float4x3(x : float4x3, y : float4x3) -> bool;
fn @eq__float2x4_float2x4(x : float2x4, y : float2x4) -> bool;
fn @eq__float3x4_float3x4(x : float3x4, y : float3x4) -> bool;
fn @eq__float4x4_float4x4(x : float4x4, y : float4x4) -> bool;
fn @eq__double2x2_double2x2(x : double2x2, y : double2x2) -> bool;
fn @eq__double3x2_double3x2(x : double3x2, y : double3x2) -> bool;
fn @eq__double4x2_double4x2(x : double4x2, y : double4x2) -> bool;
fn @eq__double2x3_double2x3(x : double2x3, y : double2x3) -> bool;
fn @eq__double3x3_double3x3(x : double3x3, y : double3x3) -> bool;
fn @eq__double4x3_double4x3(x : double4x3, y : double4x3) -> bool;
fn @eq__double2x4_double2x4(x : double2x4, y : double2x4) -> bool;
fn @eq__double3x4_double3x4(x : double3x4, y : double3x4) -> bool;
fn @eq__double4x4_double4x4(x : double4x4, y : double4x4) -> bool;
enum intensity_mode;
fn @texture_ptex__mdl_math( math: mdl_math) -> texture_ptex;
fn @texture_ptex__texture_ptex_mdl_math(value : texture_ptex, math: mdl_math) -> texture_ptex;
fn @texture_ptex__string_gamma_mode_mdl_math(name : string, gamma : gamma_mode, math: mdl_math) -> texture_ptex;
texture texture_ptex;
fn @texture_cube__mdl_math( math: mdl_math) -> texture_cube;
fn @texture_cube__texture_cube_mdl_math(value : texture_cube, math: mdl_math) -> texture_cube;
fn @texture_cube__string_gamma_mode_mdl_math(name : string, gamma : gamma_mode, math: mdl_math) -> texture_cube;
texture texture_cube;
fn @texture_3d__mdl_math( math: mdl_math) -> texture_3d;
fn @texture_3d__texture_3d_mdl_math(value : texture_3d, math: mdl_math) -> texture_3d;
fn @texture_3d__string_gamma_mode_mdl_math(name : string, gamma : gamma_mode, math: mdl_math) -> texture_3d;
texture texture_3d;
fn @texture_2d__mdl_math( math: mdl_math) -> texture_2d;
fn @texture_2d__texture_2d_mdl_math(value : texture_2d, math: mdl_math) -> texture_2d;
fn @texture_2d__string_gamma_mode_mdl_math(name : string, gamma : gamma_mode, math: mdl_math) -> texture_2d;
texture texture_2d;
fn @vdf__mdl_math( math: mdl_math) -> vdf;
fn @vdf__vdf_mdl_math(value : fn(State) -> vdf, math: mdl_math) -> vdf;
vdf vdf;
fn @edf__mdl_math( math: mdl_math) -> edf;
fn @edf__edf_mdl_math(value : fn(State) -> edf, math: mdl_math) -> edf;
edf edf;
fn @bsdf__mdl_math( math: mdl_math) -> bsdf;
*/
fn @bsdf__bsdf_mdl_math(value : fn(State) -> bsdf, math: mdl_math) -> bsdf{
    value(dummy_state)
}
/*
fn @bsdf_measurement__mdl_math( math: mdl_math) -> bsdf_measurement;
fn @bsdf_measurement__bsdf_measurement_mdl_math(value : bsdf_measurement, math: mdl_math) -> bsdf_measurement;
fn @bsdf_measurement__string_mdl_math(name : string, math: mdl_math) -> bsdf_measurement;
bsdf_measurement bsdf_measurement;
fn @light_profile__mdl_math( math: mdl_math) -> light_profile;
fn @light_profile__light_profile_mdl_math(value : light_profile, math: mdl_math) -> light_profile;
fn @light_profile__string_mdl_math(name : string, math: mdl_math) -> light_profile;
light_profile light_profile;
fn @double4x4__double_mdl_math(value : double, math: mdl_math) -> double4x4;
fn @double4x4__double4x4_mdl_math(value : double4x4, math: mdl_math) -> double4x4;
fn @double4x4__double_double_double_double_double_double_double_double_double_double_double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m02 : double, m03 : double, m10 : double, m11 : double, m12 : double, m13 : double, m20 : double, m21 : double, m22 : double, m23 : double, m30 : double, m31 : double, m32 : double, m33 : double, math: mdl_math) -> double4x4;
fn @double4x4__double4_double4_double4_double4_mdl_math(col0 : double4, col1 : double4, col2 : double4, col3 : double4, math: mdl_math) -> double4x4;
fn @double4x4__float4x4_mdl_math(value : float4x4, math: mdl_math) -> double4x4;
matrix double4x4;
fn @double4x3__double_mdl_math(value : double, math: mdl_math) -> double3x4;
fn @double4x3__double3x4_mdl_math(value : double3x4, math: mdl_math) -> double3x4;
fn @double4x3__double_double_double_double_double_double_double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m02 : double, m10 : double, m11 : double, m12 : double, m20 : double, m21 : double, m22 : double, m30 : double, m31 : double, m32 : double, math: mdl_math) -> double3x4;
fn @double4x3__double3_double3_double3_double3_mdl_math(col0 : double3, col1 : double3, col2 : double3, col3 : double3, math: mdl_math) -> double3x4;
fn @double4x3__float3x4_mdl_math(value : float3x4, math: mdl_math) -> double3x4;
matrix double4x3;
fn @double4x2__double_mdl_math(value : double, math: mdl_math) -> double2x4;
fn @double4x2__double2x4_mdl_math(value : double2x4, math: mdl_math) -> double2x4;
fn @double4x2__double_double_double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m10 : double, m11 : double, m20 : double, m21 : double, m30 : double, m31 : double, math: mdl_math) -> double2x4;
fn @double4x2__double2_double2_double2_double2_mdl_math(col0 : double2, col1 : double2, col2 : double2, col3 : double2, math: mdl_math) -> double2x4;
fn @double4x2__float2x4_mdl_math(value : float2x4, math: mdl_math) -> double2x4;
matrix double4x2;
fn @double3x4__double_mdl_math(value : double, math: mdl_math) -> double4x3;
fn @double3x4__double4x3_mdl_math(value : double4x3, math: mdl_math) -> double4x3;
fn @double3x4__double_double_double_double_double_double_double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m02 : double, m03 : double, m10 : double, m11 : double, m12 : double, m13 : double, m20 : double, m21 : double, m22 : double, m23 : double, math: mdl_math) -> double4x3;
fn @double3x4__double4_double4_double4_mdl_math(col0 : double4, col1 : double4, col2 : double4, math: mdl_math) -> double4x3;
fn @double3x4__float4x3_mdl_math(value : float4x3, math: mdl_math) -> double4x3;
matrix double3x4;
fn @double3x3__double_mdl_math(value : double, math: mdl_math) -> double3x3;
fn @double3x3__double3x3_mdl_math(value : double3x3, math: mdl_math) -> double3x3;
fn @double3x3__double_double_double_double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m02 : double, m10 : double, m11 : double, m12 : double, m20 : double, m21 : double, m22 : double, math: mdl_math) -> double3x3;
fn @double3x3__double3_double3_double3_mdl_math(col0 : double3, col1 : double3, col2 : double3, math: mdl_math) -> double3x3;
fn @double3x3__float3x3_mdl_math(value : float3x3, math: mdl_math) -> double3x3;
matrix double3x3;
fn @double3x2__double_mdl_math(value : double, math: mdl_math) -> double2x3;
fn @double3x2__double2x3_mdl_math(value : double2x3, math: mdl_math) -> double2x3;
fn @double3x2__double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m10 : double, m11 : double, m20 : double, m21 : double, math: mdl_math) -> double2x3;
fn @double3x2__double2_double2_double2_mdl_math(col0 : double2, col1 : double2, col2 : double2, math: mdl_math) -> double2x3;
fn @double3x2__float2x3_mdl_math(value : float2x3, math: mdl_math) -> double2x3;
matrix double3x2;
fn @double2x4__double_mdl_math(value : double, math: mdl_math) -> double4x2;
fn @double2x4__double4x2_mdl_math(value : double4x2, math: mdl_math) -> double4x2;
fn @double2x4__double_double_double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m02 : double, m03 : double, m10 : double, m11 : double, m12 : double, m13 : double, math: mdl_math) -> double4x2;
fn @double2x4__double4_double4_mdl_math(col0 : double4, col1 : double4, math: mdl_math) -> double4x2;
fn @double2x4__float4x2_mdl_math(value : float4x2, math: mdl_math) -> double4x2;
matrix double2x4;
fn @double2x3__double_mdl_math(value : double, math: mdl_math) -> double3x2;
fn @double2x3__double3x2_mdl_math(value : double3x2, math: mdl_math) -> double3x2;
fn @double2x3__double_double_double_double_double_double_mdl_math(m00 : double, m01 : double, m02 : double, m10 : double, m11 : double, m12 : double, math: mdl_math) -> double3x2;
fn @double2x3__double3_double3_mdl_math(col0 : double3, col1 : double3, math: mdl_math) -> double3x2;
fn @double2x3__float3x2_mdl_math(value : float3x2, math: mdl_math) -> double3x2;
matrix double2x3;
fn @double2x2__double_mdl_math(value : double, math: mdl_math) -> double2x2;
fn @double2x2__double2x2_mdl_math(value : double2x2, math: mdl_math) -> double2x2;
fn @double2x2__double_double_double_double_mdl_math(m00 : double, m01 : double, m10 : double, m11 : double, math: mdl_math) -> double2x2;
fn @double2x2__double2_double2_mdl_math(col0 : double2, col1 : double2, math: mdl_math) -> double2x2;
fn @double2x2__float2x2_mdl_math(value : float2x2, math: mdl_math) -> double2x2;
matrix double2x2;
*/
fn @float4x4__float_mdl_math(value : float, math: mdl_math) -> float4x4{
    [[value,value,value,value],[value,value,value,value],[value,value,value,value],[value,value,value,value]]
}
/*
fn @float4x4__float4x4_mdl_math(value : float4x4, math: mdl_math) -> float4x4;
fn @float4x4__float_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m02 : float, m03 : float, m10 : float, m11 : float, m12 : float, m13 : float, m20 : float, m21 : float, m22 : float, m23 : float, m30 : float, m31 : float, m32 : float, m33 : float, math: mdl_math) -> float4x4;
fn @float4x4__float4_float4_float4_float4_mdl_math(col0 : float4, col1 : float4, col2 : float4, col3 : float4, math: mdl_math) -> float4x4;
fn @float4x4__double4x4_mdl_math(value : double4x4, math: mdl_math) -> float4x4;
matrix float4x4;
fn @float4x3__float_mdl_math(value : float, math: mdl_math) -> float3x4;
fn @float4x3__float3x4_mdl_math(value : float3x4, math: mdl_math) -> float3x4;
fn @float4x3__float_float_float_float_float_float_float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m02 : float, m10 : float, m11 : float, m12 : float, m20 : float, m21 : float, m22 : float, m30 : float, m31 : float, m32 : float, math: mdl_math) -> float3x4;
fn @float4x3__float3_float3_float3_float3_mdl_math(col0 : float3, col1 : float3, col2 : float3, col3 : float3, math: mdl_math) -> float3x4;
fn @float4x3__double3x4_mdl_math(value : double3x4, math: mdl_math) -> float3x4;
matrix float4x3;
fn @float4x2__float_mdl_math(value : float, math: mdl_math) -> float2x4;
fn @float4x2__float2x4_mdl_math(value : float2x4, math: mdl_math) -> float2x4;
fn @float4x2__float_float_float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m10 : float, m11 : float, m20 : float, m21 : float, m30 : float, m31 : float, math: mdl_math) -> float2x4;
fn @float4x2__float2_float2_float2_float2_mdl_math(col0 : float2, col1 : float2, col2 : float2, col3 : float2, math: mdl_math) -> float2x4;
fn @float4x2__double2x4_mdl_math(value : double2x4, math: mdl_math) -> float2x4;
matrix float4x2;
fn @float3x4__float_mdl_math(value : float, math: mdl_math) -> float4x3;
fn @float3x4__float4x3_mdl_math(value : float4x3, math: mdl_math) -> float4x3;
fn @float3x4__float_float_float_float_float_float_float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m02 : float, m03 : float, m10 : float, m11 : float, m12 : float, m13 : float, m20 : float, m21 : float, m22 : float, m23 : float, math: mdl_math) -> float4x3;
fn @float3x4__float4_float4_float4_mdl_math(col0 : float4, col1 : float4, col2 : float4, math: mdl_math) -> float4x3;
fn @float3x4__double4x3_mdl_math(value : double4x3, math: mdl_math) -> float4x3;
matrix float3x4;
*/
fn @float3x3__float_mdl_math(value : float, math: mdl_math) -> float3x3{
    [[value,value,value],[value,value,value],[value,value,value]]
}
/*
fn @float3x3__float3x3_mdl_math(value : float3x3, math: mdl_math) -> float3x3;
fn @float3x3__float_float_float_float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m02 : float, m10 : float, m11 : float, m12 : float, m20 : float, m21 : float, m22 : float, math: mdl_math) -> float3x3;
fn @float3x3__float3_float3_float3_mdl_math(col0 : float3, col1 : float3, col2 : float3, math: mdl_math) -> float3x3;
fn @float3x3__double3x3_mdl_math(value : double3x3, math: mdl_math) -> float3x3;
matrix float3x3;
fn @float3x2__float_mdl_math(value : float, math: mdl_math) -> float2x3;
fn @float3x2__float2x3_mdl_math(value : float2x3, math: mdl_math) -> float2x3;
fn @float3x2__float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m10 : float, m11 : float, m20 : float, m21 : float, math: mdl_math) -> float2x3;
fn @float3x2__float2_float2_float2_mdl_math(col0 : float2, col1 : float2, col2 : float2, math: mdl_math) -> float2x3;
fn @float3x2__double2x3_mdl_math(value : double2x3, math: mdl_math) -> float2x3;
matrix float3x2;
fn @float2x4__float_mdl_math(value : float, math: mdl_math) -> float4x2;
fn @float2x4__float4x2_mdl_math(value : float4x2, math: mdl_math) -> float4x2;
fn @float2x4__float_float_float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m02 : float, m03 : float, m10 : float, m11 : float, m12 : float, m13 : float, math: mdl_math) -> float4x2;
fn @float2x4__float4_float4_mdl_math(col0 : float4, col1 : float4, math: mdl_math) -> float4x2;
fn @float2x4__double4x2_mdl_math(value : double4x2, math: mdl_math) -> float4x2;
matrix float2x4;
fn @float2x3__float_mdl_math(value : float, math: mdl_math) -> float3x2;
fn @float2x3__float3x2_mdl_math(value : float3x2, math: mdl_math) -> float3x2;
fn @float2x3__float_float_float_float_float_float_mdl_math(m00 : float, m01 : float, m02 : float, m10 : float, m11 : float, m12 : float, math: mdl_math) -> float3x2;
fn @float2x3__float3_float3_mdl_math(col0 : float3, col1 : float3, math: mdl_math) -> float3x2;
fn @float2x3__double3x2_mdl_math(value : double3x2, math: mdl_math) -> float3x2;
matrix float2x3;
fn @float2x2__float_mdl_math(value : float, math: mdl_math) -> float2x2;
fn @float2x2__float2x2_mdl_math(value : float2x2, math: mdl_math) -> float2x2;
fn @float2x2__float_float_float_float_mdl_math(m00 : float, m01 : float, m10 : float, m11 : float, math: mdl_math) -> float2x2;
fn @float2x2__float2_float2_mdl_math(col0 : float2, col1 : float2, math: mdl_math) -> float2x2;
fn @float2x2__double2x2_mdl_math(value : double2x2, math: mdl_math) -> float2x2;
matrix float2x2;
fn @color__float_mdl_math(value : float, math: mdl_math) -> color;
fn @color__float_float_float_mdl_math(r : float, g : float, b : float, math: mdl_math) -> color;
*/
fn @color__float3_mdl_math(rgb : float3, math: mdl_math) -> color{
    [rgb(0), rgb(1), rgb(2)]
}
/*
fn @color__float_arr_float_arr_mdl_math(wavelengths : [float], amplitudes : [float], math: mdl_math) -> color;
fn @color__color_mdl_math(value : color, math: mdl_math) -> color;
fn @string__string_mdl_math(value : string, math: mdl_math) -> string;
fn @double4__double_mdl_math(value : double, math: mdl_math) -> double4;
fn @double4__double_double_double_double_mdl_math(x : double, y : double, z : double, w : double, math: mdl_math) -> double4;
fn @double4__double4_mdl_math(value : double4, math: mdl_math) -> double4;
fn @double4__bool4_mdl_math(value : bool4, math: mdl_math) -> double4;
fn @double4__int4_mdl_math(value : int4, math: mdl_math) -> double4;
fn @double4__float4_mdl_math(value : float4, math: mdl_math) -> double4;
fn @double3__double_mdl_math(value : double, math: mdl_math) -> double3;
fn @double3__double_double_double_mdl_math(x : double, y : double, z : double, math: mdl_math) -> double3;
fn @double3__double3_mdl_math(value : double3, math: mdl_math) -> double3;
fn @double3__bool3_mdl_math(value : bool3, math: mdl_math) -> double3;
fn @double3__int3_mdl_math(value : int3, math: mdl_math) -> double3;
fn @double3__float3_mdl_math(value : float3, math: mdl_math) -> double3;
fn @double2__double_mdl_math(value : double, math: mdl_math) -> double2;
fn @double2__double_double_mdl_math(x : double, y : double, math: mdl_math) -> double2;
fn @double2__double2_mdl_math(value : double2, math: mdl_math) -> double2;
fn @double2__bool2_mdl_math(value : bool2, math: mdl_math) -> double2;
fn @double2__int2_mdl_math(value : int2, math: mdl_math) -> double2;
fn @double2__float2_mdl_math(value : float2, math: mdl_math) -> double2;
fn @double__double_mdl_math(value : double, math: mdl_math) -> double;
fn @double__bool_mdl_math(value : bool, math: mdl_math) -> double;
fn @double__int_mdl_math(value : int, math: mdl_math) -> double;
fn @double__float_mdl_math(value : float, math: mdl_math) -> double;
fn @float4__float_mdl_math(value : float, math: mdl_math) -> float4;
fn @float4__float_float_float_float_mdl_math(x : float, y : float, z : float, w : float, math: mdl_math) -> float4;
fn @float4__float4_mdl_math(value : float4, math: mdl_math) -> float4;
fn @float4__bool4_mdl_math(value : bool4, math: mdl_math) -> float4;
fn @float4__int4_mdl_math(value : int4, math: mdl_math) -> float4;
fn @float4__double4_mdl_math(value : double4, math: mdl_math) -> float4;
fn @float3__float_mdl_math(value : float, math: mdl_math) -> float3;
fn @float3__float_float_float_mdl_math(x : float, y : float, z : float, math: mdl_math) -> float3;
fn @float3__float3_mdl_math(value : float3, math: mdl_math) -> float3;
fn @float3__bool3_mdl_math(value : bool3, math: mdl_math) -> float3;
fn @float3__int3_mdl_math(value : int3, math: mdl_math) -> float3;
fn @float3__double3_mdl_math(value : double3, math: mdl_math) -> float3;
fn @float3__color_mdl_math(value : color, math: mdl_math) -> float3;
fn @float2__float_mdl_math(value : float, math: mdl_math) -> float2;
fn @float2__float_float_mdl_math(x : float, y : float, math: mdl_math) -> float2;
fn @float2__float2_mdl_math(value : float2, math: mdl_math) -> float2;
fn @float2__bool2_mdl_math(value : bool2, math: mdl_math) -> float2;
fn @float2__int2_mdl_math(value : int2, math: mdl_math) -> float2;
fn @float2__double2_mdl_math(value : double2, math: mdl_math) -> float2;
fn @float__float_mdl_math(value : float, math: mdl_math) -> float;
fn @float__bool_mdl_math(value : bool, math: mdl_math) -> float;
fn @float__int_mdl_math(value : int, math: mdl_math) -> float;
fn @float__double_mdl_math(value : double, math: mdl_math) -> float;
fn @int4__int_mdl_math(value : int, math: mdl_math) -> int4;
fn @int4__int_int_int_int_mdl_math(x : int, y : int, z : int, w : int, math: mdl_math) -> int4;
fn @int4__int4_mdl_math(value : int4, math: mdl_math) -> int4;
fn @int4__bool4_mdl_math(value : bool4, math: mdl_math) -> int4;
fn @int4__float4_mdl_math(value : float4, math: mdl_math) -> int4;
fn @int4__double4_mdl_math(value : double4, math: mdl_math) -> int4;
fn @int3__int_mdl_math(value : int, math: mdl_math) -> int3;
fn @int3__int_int_int_mdl_math(x : int, y : int, z : int, math: mdl_math) -> int3;
fn @int3__int3_mdl_math(value : int3, math: mdl_math) -> int3;
fn @int3__bool3_mdl_math(value : bool3, math: mdl_math) -> int3;
fn @int3__float3_mdl_math(value : float3, math: mdl_math) -> int3;
fn @int3__double3_mdl_math(value : double3, math: mdl_math) -> int3;
fn @int2__int_mdl_math(value : int, math: mdl_math) -> int2;
fn @int2__int_int_mdl_math(x : int, y : int, math: mdl_math) -> int2;
fn @int2__int2_mdl_math(value : int2, math: mdl_math) -> int2;
fn @int2__bool2_mdl_math(value : bool2, math: mdl_math) -> int2;
fn @int2__float2_mdl_math(value : float2, math: mdl_math) -> int2;
fn @int2__double2_mdl_math(value : double2, math: mdl_math) -> int2;
fn @int__int_mdl_math(value : int, math: mdl_math) -> int;
fn @int__bool_mdl_math(value : bool, math: mdl_math) -> int;
fn @int__float_mdl_math(value : float, math: mdl_math) -> int;
fn @int__double_mdl_math(value : double, math: mdl_math) -> int;
fn @bool4__bool_mdl_math(value : bool, math: mdl_math) -> bool4;
fn @bool4__bool_bool_bool_bool_mdl_math(x : bool, y : bool, z : bool, w : bool, math: mdl_math) -> bool4;
fn @bool4__bool4_mdl_math(value : bool4, math: mdl_math) -> bool4;
fn @bool4__int4_mdl_math(value : int4, math: mdl_math) -> bool4;
fn @bool4__float4_mdl_math(value : float4, math: mdl_math) -> bool4;
fn @bool4__double4_mdl_math(value : double4, math: mdl_math) -> bool4;
fn @bool3__bool_mdl_math(value : bool, math: mdl_math) -> bool3;
fn @bool3__bool_bool_bool_mdl_math(x : bool, y : bool, z : bool, math: mdl_math) -> bool3;
fn @bool3__bool3_mdl_math(value : bool3, math: mdl_math) -> bool3;
fn @bool3__int3_mdl_math(value : int3, math: mdl_math) -> bool3;
fn @bool3__float3_mdl_math(value : float3, math: mdl_math) -> bool3;
fn @bool3__double3_mdl_math(value : double3, math: mdl_math) -> bool3;
fn @bool2__bool_mdl_math(value : bool, math: mdl_math) -> bool2;
fn @bool2__bool_bool_mdl_math(x : bool, y : bool, math: mdl_math) -> bool2;
fn @bool2__bool2_mdl_math(value : bool2, math: mdl_math) -> bool2;
fn @bool2__int2_mdl_math(value : int2, math: mdl_math) -> bool2;
fn @bool2__float2_mdl_math(value : float2, math: mdl_math) -> bool2;
fn @bool2__double2_mdl_math(value : double2, math: mdl_math) -> bool2;
fn @bool__bool_mdl_math(value : bool, math: mdl_math) -> bool;
fn @bool__int_mdl_math(value : int, math: mdl_math) -> bool;
fn @bool__float_mdl_math(value : float, math: mdl_math) -> bool;
fn @bool__double_mdl_math(value : double, math: mdl_math) -> bool;*/