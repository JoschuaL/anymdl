static dummy_state: State = State{
    position: ||{ [0.0f, 0.0f, 0.0f]},



    normal: ||{ [0.0f, 0.0f, 0.0f]},



    geometry_normal: ||{ [0.0f, 0.0f, 0.0f]},



    motion: ||{ [0.0f, 0.0f, 0.0f]},



    texture_space_max: ||{0},



    texture_coordinate_int : |index:int|{ [0.0f, 0.0f, 0.0f]},



    texture_tangent_u_int : |index:int|{ [0.0f, 0.0f, 0.0f]},



    texture_tangent_v_int : |index:int|{ [0.0f, 0.0f, 0.0f]},



    tangent_space_int : |index:int|{ [[0.0f,0.0f,0.0f],[0.0f,0.0f,0.0f],[0.0f,0.0f,0.0f]]},



    geometry_tangent_u_int : |index:int|{ [0.0f, 0.0f, 0.0f]},



    geometry_tangent_v_int : |index:int|{ [0.0f, 0.0f, 0.0f]},



    direction: ||{ [0.0f, 0.0f, 0.0f]},



    animation_time: ||{ 0.0f},



    wavelength_base: ||{ [0.0f]},





    transform_coordinate_space_coordinate_space : |from_space:coordinate_space, to_space:coordinate_space,|{ [[0.0f,0.0f,0.0f,0.0f],[0.0f,0.0f,0.0f,0.0f],[0.0f,0.0f,0.0f,0.0f],[0.0f,0.0f,0.0f,0.0f]]},



    transform_point_coordinate_space_coordinate_space_float3 : |from_space:coordinate_space, to_space:coordinate_space,coord:float3,|{[0.0f, 0.0f, 0.0f]},



    transform_vector_coordinate_space_coordinate_space_float3 : |from_space:coordinate_space, to_space:coordinate_space,coord:float3,|{[0.0f, 0.0f, 0.0f]},



    transform_normal_coordinate_space_coordinate_space_float3 : |from_space:coordinate_space, to_space:coordinate_space,coord:float3,|{[0.0f, 0.0f, 0.0f]},



    transform_scale_coordinate_space_coordinate_space_float : |from_space:coordinate_space, to_space:coordinate_space,scale:float,|{ 0.0f},



    rounded_corner_normal_float_bool : |factor:float,is:bool,|{[0.0f, 0.0f, 0.0f]},



    rounded_corner_normal_float_bool_float : |factor:float,is:bool,factor2:float,|{[0.0f, 0.0f, 0.0f]},



    meters_per_scene_unit: ||{ 0.0f},



    scene_units_per_meter: ||{ 0.0f},



    object_id: ||{0},



    wavelength_min: ||{ 0.0f},



    wavelength_max: ||{ 0.0f}
};



static WAVELENGTH_BASE_MAX: int = 1;

struct State {

position: fn() -> float3,



normal: fn() -> float3,



geometry_normal: fn() -> float3,



motion: fn() -> float3,



texture_space_max: fn() -> int,



texture_coordinate_int : fn(int) -> float3,



texture_tangent_u_int : fn(int) -> float3,



texture_tangent_v_int : fn(int) -> float3,



tangent_space_int : fn(int) -> float3x3,



geometry_tangent_u_int : fn(int) -> float3,



geometry_tangent_v_int : fn(int) -> float3,



direction: fn() -> float3,



animation_time: fn() -> float,



wavelength_base: fn() -> [float*1],





transform_coordinate_space_coordinate_space : fn(coordinate_space, coordinate_space) -> float4x4,



transform_point_coordinate_space_coordinate_space_float3 : fn(coordinate_space, coordinate_space, float3) -> float3,



transform_vector_coordinate_space_coordinate_space_float3 : fn(coordinate_space, coordinate_space, float3) -> float3,



transform_normal_coordinate_space_coordinate_space_float3 : fn(coordinate_space, coordinate_space, float3) -> float3,



transform_scale_coordinate_space_coordinate_space_float : fn(coordinate_space, coordinate_space, float) -> float,



rounded_corner_normal_float_bool : fn(float, bool) -> float3,



rounded_corner_normal_float_bool_float : fn(float, bool, float) -> float3,



meters_per_scene_unit: fn() -> float,



scene_units_per_meter: fn() -> float,



object_id: fn() -> int,



wavelength_min: fn() -> float,



wavelength_max: fn() -> float

}

enum coordinate_space{
    coordinate_internal,
    coordinate_object,
    coordinate_world
}   

